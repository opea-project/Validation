# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
name: Build Container
description: Given the inputs found below, build all containers found in a docker-compose.yaml file for a given configuration
inputs:
  work_dir:
    description: Directory to run the build in
    required: true
    type: string
  docker_compose_path:
    description: Path with xxx-compose.yaml to build
    required: true
    type: string
  service_list:
    description: List of services to build
    required: false
    default: ""
    type: string
  registry:
    description: Container Registry URL
    required: false
    default: "opea"
    type: string
  tag:
    description: Container Tag
    required: false
    default: "latest"
    type: string
  inject_commit:
    default: false
    description: "inject commit to docker images true or false"
    required: false
    type: boolean

runs:
  using: "composite"
  steps:
    - name: Checkout out Validation
      uses: actions/checkout@v4
      with:
        repository: opea-project/Validation
        path: Validation

    - name: Build Containers
      shell: bash
      run: |
        service_list=$(echo ${{ inputs.service_list }} | tr ',' ' ')
        echo $service_list
        cp ${{ inputs.docker_compose_path }} ${{ inputs.work_dir }}/docker-compose.yaml
        if [[ "true" == "${{ inputs.inject_commit }}" ]]; then
          echo "************Start inject commit id and message************"
          cp ${{ github.workspace }}/Validation/.github/scripts/inject_commit.py ${{ inputs.work_dir }}/
          WORKPATH=${{ inputs.work_dir }}
          python3 inject_commit.py
          cat ${{ inputs.work_dir }}/docker-compose.yaml
          echo "************Inject commit id and message end************"
        fi
        cd ${{ inputs.work_dir }}
        REGISTRY=${{ inputs.registry }} \
        TAG=${{ inputs.tag }} \
        docker compose build ${service_list} --no-cache
        if [[ "${TAG}" == "latest" ]]; then
          echo "If image tag is latest, make sure push another tag along with latest to prevent space leakage."
          if [[ -z "${service_list}" ]]; then
            service_list=$(cat ${{ inputs.work_dir }}/docker-compose.yaml | yq -r '.[]' | jq 'keys' | jq -c '.')
            service_list=$(echo ${service_list} | jq -r '.[]' | tr '\n' ' ')
          fi
          for service in ${service_list}; do
            echo "Tag ${REGISTRY}/${service} latest image with commit id ${GITHUB_SHA}."
            docker tag ${REGISTRY}/${service}:latest ${REGISTRY}/${service}:${GITHUB_SHA}
          done
        fi
      working-directory: ${{ inputs.work_dir }}

    - name: Push Containers
      shell: bash
      run: |
        service_list=$(echo ${{ inputs.service_list }} | tr ',' ' ')
        export REGISTRY=${{ inputs.registry }}
        export TAG=${{ inputs.tag }}
        docker compose push ${service_list}
        if [[ "${TAG}" == "latest" ]]; then
          export TAG=${GITHUB_SHA}
          docker compose push ${service_list}
        fi
      working-directory: ${{ inputs.work_dir }}

    - name: Clean up Containers
      if: ${{ always() }}
      shell: bash
      run: |
        export REGISTRY=${{ inputs.registry }}
        export TAG=${{ inputs.tag }}
        docker compose down --rmi all
        if [[ "${TAG}" == "latest" ]]; then
          export TAG=${GITHUB_SHA}
          docker compose down --rmi all
        fi
      working-directory: ${{ inputs.work_dir }}

    - name: Remove Containers
      if: ${{ always() }}
      shell: bash
      run: docker system prune --force
